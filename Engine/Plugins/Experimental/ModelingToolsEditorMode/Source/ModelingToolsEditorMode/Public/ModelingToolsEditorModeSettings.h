// Copyright Epic Games, Inc. All Rights Reserved.

#pragma once

#include "UObject/ObjectMacros.h"
#include "UObject/Object.h"
#include "ModelingToolsEditorModeSettings.generated.h"

UENUM()
enum class EModelingModeDefaultMeshObjectType
{
	/** Generate a new Static Mesh Asset (using Generated Asset settings below) and AStaticMeshActor */
	StaticMeshAsset,
	/** Generate a new AVolume Actor */
	VolumeActor,
	/** Generate a new ADynamicMeshActor (stored locally in the Level) */
	DynamicMeshActor
};

UENUM()
enum class EModelingModeAssetGenerationBehavior
{
	/** Generate and automatically Save new Assets on creation */
	AutoGenerateAndAutosave,

	/** Generate new Assets and mark as Modified but do not automatically Save */
	AutoGenerateButDoNotAutosave,

	/** Prompt to Save each new Asset upon Creation */
	InteractivePromptToSave
};



UENUM()
enum class EModelingModeAssetGenerationLocation
{
	/** All generated assets will be stored in an AutoGenerated folder that is located relative to the World they are being saved in */
	AutoGeneratedWorldRelativeAssetPath,

	/** All generated assets will be stored in a root-level AutoGenerated folder */
	AutoGeneratedGlobalAssetPath,

	/** Generated assets will be stored in the currently-visible Asset Browser folder if available, otherwise at the Auto Generated Asset Path */
	CurrentAssetBrowserPathIfAvailable
};


/**
 * Settings for the Modeling Tools Editor Mode plug-in.
 */
UCLASS(config=Editor)
class MODELINGTOOLSEDITORMODE_API UModelingToolsEditorModeSettings :
	public UDeveloperSettings
{
	GENERATED_BODY()
public:
	// UDeveloperSettings overrides

	virtual FName GetContainerName() const override { return FName("Project"); }
	virtual FName GetCategoryName() const override { return FName("Plugins"); }
	virtual FName GetSectionName() const override { return FName("ModelingMode"); }

	/** How should Assets auto-generated by Modeling Tools be handled in terms of saving, naming, etc */
	UPROPERTY(config, EditAnywhere, Category = GeneratedModelingAssets)
	EModelingModeAssetGenerationBehavior AssetGenerationMode = EModelingModeAssetGenerationBehavior::AutoGenerateButDoNotAutosave;

	/** Where should Assets auto-generated by Modeling Tools be stored by default */
	UPROPERTY(config, EditAnywhere, Category = GeneratedModelingAssets)
	EModelingModeAssetGenerationLocation AssetGenerationLocation = EModelingModeAssetGenerationLocation::AutoGeneratedWorldRelativeAssetPath;

	/** Assets auto-generated by Modeling Tools are stored at this path, relative to the parent path defined by the Location. Set to an empty string to disable. */
	UPROPERTY(config, EditAnywhere, Category = GeneratedModelingAssets)
	FString AutoGeneratedAssetPath = TEXT("_GENERATED");

	/** If true, Auto-Generated Assets created in an unsaved Level will be stored relative to top-level /Game folder, otherwise they will be stored in /Temp and cannot be saved until they are explicitly moved to a permanent location */
	UPROPERTY(config, EditAnywhere, Category = GeneratedModelingAssets)
	bool bStoreUnsavedLevelAssetsInTopLevelGameFolder = true;

	/** If true, Autogenerated Assets are stored in per-user folders below the Autogen path */
	UPROPERTY(config, EditAnywhere, Category = GeneratedModelingAssets)
	bool bUsePerUserAutogenSubfolder = true;

	/** If true, Autogenerated Assets have a short random string generated and appended to their name */
	UPROPERTY(config, EditAnywhere, Category = GeneratedModelingAssets)
	bool bAppendRandomStringToName = true;

	/** Overrides the user name used for per-user folders below the Autogen path. This might be necessary to resolve issues with source control, for example. Note that the per-user folder name might not contain the name exactly as provided. */
	UPROPERTY(config, EditAnywhere, Category = "Modeling Mode|Generated Assets")
	FString AutogenSubfolderUserNameOverride;

	/** What type of Mesh Object should Output Type Setting default to in Modeling Mode Tools (takes effect after Editor restart) */
	UPROPERTY(config, EditAnywhere, Category = "Modeling Mode")
	EModelingModeDefaultMeshObjectType DefaultMeshObjectType = EModelingModeDefaultMeshObjectType::StaticMeshAsset;

protected:

	/** Enable/Disable the options to emit Dynamic Mesh Actors in Modeling Mode Tools */
	UPROPERTY()
	bool bEnableDynamicMeshActors = false;

	/** Assets auto-generated by Modeling Tools are stored at this path when in restrictive mode, relative to the package folder path. */
	UPROPERTY(Config)
	FString RestrictiveModeAutoGeneratedAssetPath = TEXT("Meshes");

	bool bRestrictiveMode = false;

public:
	EModelingModeAssetGenerationLocation GetAssetGenerationLocation() const
	{
		return bRestrictiveMode
			? EModelingModeAssetGenerationLocation::AutoGeneratedGlobalAssetPath
			: AssetGenerationLocation;
	}

	void SetAssetGenerationLocation(const EModelingModeAssetGenerationLocation Location)
	{
		AssetGenerationLocation = Location;
	}

	EModelingModeAssetGenerationBehavior GetAssetGenerationMode() const
	{
		return bRestrictiveMode
			? EModelingModeAssetGenerationBehavior::AutoGenerateButDoNotAutosave
			: AssetGenerationMode;
	}

	void SetAssetGenerationMode(const EModelingModeAssetGenerationBehavior Mode)
	{
		AssetGenerationMode = Mode;
	}

	//
	// Restrictive Mode
	//

	virtual bool InRestrictiveMode() const
	{
		return bRestrictiveMode;
	}

	virtual void SetRestrictiveMode(bool bEnabled)
	{
		bRestrictiveMode = bEnabled;
	}

	virtual FString GetRestrictiveModeAutoGeneratedAssetPath() const
	{
		return bRestrictiveMode ? RestrictiveModeAutoGeneratedAssetPath : FString();
	}

	virtual bool SetRestrictiveModeAutoGeneratedAssetPath(const FString& AssetPath)
	{
		if (bRestrictiveMode)
		{
			RestrictiveModeAutoGeneratedAssetPath = AssetPath;
			return true;
		}
		return false;
	}

	

	DECLARE_MULTICAST_DELEGATE_TwoParams(UModelingToolsEditorModeSettingsModified, UObject*, FProperty*);
	UModelingToolsEditorModeSettingsModified OnModified;

	void PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)
	{
		OnModified.Broadcast(this, PropertyChangedEvent.Property);
	}

};
